package com.example.android.List;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.example.android.City.City;
import com.example.android.City.CityOperations;
import com.example.android.Network.HttpUtility;
import com.example.android.map.R;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.SparseArray;
import android.view.Menu;
import android.view.View;
import android.widget.ExpandableListView;
import android.widget.Toast;


public class MainActivity extends Activity {
	  // more efficient than HashMap for mapping integers to objects
	  SparseArray<Group> groups = new SparseArray<Group>();
	  private CityOperations cityDBoperation;
	  
	  @Override
	  protected void onCreate(Bundle savedInstanceState) {
	    super.onCreate(savedInstanceState);
	    setContentView(R.layout.activity_main);
	    
	    Boolean isFirstRun = getSharedPreferences("PREFERENCE", MODE_PRIVATE)
	    		.getBoolean("isfirstrun", true);
	    
	    if (cityDBoperation == null)
	    {
	    	cityDBoperation = new CityOperations(this);
	        cityDBoperation.open();
	    }
	    
	    
	    if (isFirstRun)
	    {
	    	 Toast.makeText(MainActivity.this, "טוען נתונים...",
	 	            Toast.LENGTH_LONG).show();
	    	 
	    	 getSharedPreferences("PREFERENCE", MODE_PRIVATE).edit()
	    		.putBoolean("isfirstrun", false).commit();
	    	 
	         /// getting cities from the server
	    	 getDataFromDB();
	    	 
	    }
	    else
	    {
	    	// Getting all of the city from the local db.
		    createData();
	    }
	    
	    ExpandableListView listView = (ExpandableListView) findViewById(R.id.listView);
	    MyExpandableListAdapter adapter = new MyExpandableListAdapter(this, groups);
	    listView.setAdapter(adapter);
	  }

	  private void createData() {
		  Group chosenCity = new Group("הערים שבתחרת להתרעה");
		  groups.append(0, chosenCity);
		  
		  Group allCities = new Group("כלל הערים");
		  ArrayList<City> cities = cityDBoperation.getAllCities();
		  
		  // Displaying all of the cities.
		  for (City currentCity : cities)
		  {
			  allCities.cities.add(currentCity.getName());
		  }
		  
		  groups.append(1, allCities);
	  }
	  
	  private void getDataFromDB()
	  {
		  new AsyncTask<Void, Void, String>()
		  {

			@Override
			protected String doInBackground(Void... params) {
				String requestURL = "http://172.20.10.7:80/getAreas";
				String[] areas = null;
				try {
					HttpUtility.sendGetRequest(requestURL);
					areas = HttpUtility.readMultipleLinesRespone();
				} catch (IOException e) {
					
					e.printStackTrace();
				}
				
				HttpUtility.disconnect();
				
				return convertStringArrayToString(areas);
			}
		  		 

		@Override
		  protected void onPostExecute(String areas)
		  {
			  // inserting all of the cities to the local db, saving the data.
			addAreasToDB(areas);
			 
		  }
		}.execute();
	  }
	  
	  
	private String addAreasToDB(String areas) {
			
			try {
				
				JSONObject obj = new JSONObject(areas);
				
				JSONArray areasArray = obj.getJSONArray("areas");
				
				for(int areaIter = 0; areaIter < areasArray.length(); areaIter++)
				{
					JSONObject currArea = areasArray.getJSONObject(areaIter);
				}
				
				
			} catch (Exception e) {
			
				e.printStackTrace();
			}
		  	
			return null;
		}

	private String convertStringArrayToString(String[] areas) {
		StringBuilder strBuilder = new StringBuilder();
		
		for (String value : areas)
		{
			strBuilder.append(value);
		}
		
		return strBuilder.toString();
	}
} 

/*public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
   
    @Override
	public boolean onCreateOptionsMenu(Menu menu) {
      getMenuInflater().inflate(R.menu.main, menu);
      
      return true;
    }
    
    public void show(View view)
    {
    	Intent intent = new Intent(this,ShowListActivity.class);
    	
    	startActivity(intent);
    }
}*/
